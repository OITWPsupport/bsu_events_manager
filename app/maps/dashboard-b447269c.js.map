{"version":3,"sources":["app.js","directives/formHandlerDirective.js","directives/newEventFormDirective.js","directives/shortcodeFormDirective.js","directives/timesDirective.js","services/calendarService.js","services/oAuthService.js","controllers/MainCtrl.js","directives/loadingDirective.js","directives/selectOnClickDirective.js","services/anchorSmoothScrollService.js","services/appService.js","services/dateService.js","services/eventService.js","services/googleApiService.js"],"names":["angular","module","filter","input","calendar","categories","forEach","category","parent","name","push","directive","$timeout","anchorSmoothScroll","scope","formHandlerCallback","restrict","link","elem","on","firstInvalid","element","querySelector","scrollTo","scrollToTop","PLUGIN_ROOT","$modal","$alert","appService","calendarService","templateUrl","setUp","newEventForm","$setPristine","event","getEmptyEvent","type","repeat","ends","iconUrl","loading","addingEvent","submitted","calendarTypes","locations","staticCategories","fieldTypes","runOnLoad","then","data","icons","settings","init","iconModal","placement","title","contentTemplate","show","animation","backdropAnimation","showIcons","selectIcon","icon","toggle","url","replace","selectedIconName","undefined","attributeName","attributeValue","split","piece","pos","indexOf","splice","registrationRequired","isRequired","registration","deadline","required","addEvent","fieldType","location","create","content","duration","container","$watch","types","newStart","oldStart","endDate","selectedCategories","viewType","shortcode","weekDefault","viewTypes","value","createShortcode","cats","trim","length","time","hoursList","minutesList","amPmList","hours","minutes","amPm","template","service","$q","googleApiService","oAuthService","eventService","getCalendarId","calendarName","id","calendars","calendarId","createEvent","this","formattedEvent","formatForDashboard","defer","checkAuth","registrationEvent","formatRegistration","resolve","reject","promise","$rootScope","accessToken","clientId","scopes","immediate","s","authorize","client_id","authResponse","access_token","error","callback","constant","CATEGORIES","DETAILS_URL","FEE","RECTRAC_URL","REGISTRATION_URL","REGISTRATION_DEADLINE","DATE_DESCRIPTION","FIELD_TYPE","UNIQUE_ICON_URL","START_DATE_TIME","END_DATE_TIME","OTHER_LOCATION","TRIP_INCLUDES","PACKING_LIST","collection","objectKey","output","keys","item","key","v","controller","$scope","loadApp","gapi","client","setApiKey","appIsLoaded","d","fromJson","all","view","detailsPage","eventId","select","$document","$window","getCurrentPagePosition","window","document","pageYOffset","documentElement","scrollTop","body","getElementY","y","offsetTop","node","offsetParent","scrollDown","startY","stopY","speed","distance","timer","step","Math","round","leapY","i","setTimeout","scrollUp","self","getElementsByTagName","defaultSpeed","$http","AT_SIGN_REPLACEMENT","children","childCategory","categoriesToDisplay","eventTypes","loadPromise","pad","n","getDateString","date","format","timezone","dateString","moment","getDateTimeString","isDST","getDaysString","days","recurrenceDays","day","join","dateService","FIELDS","SEPARATOR","getStartTimeForDashboard","start","timeZone","allDay","startDate","dateTime","startTime","getEndTimeForDashboard","end","endTime","getDescriptionWithMetaData","metadata","toString","detailsUrl","fee","recTracId","dateDescription","dateDescriptionNewLineSeparator","otherLocationDescription","tripIncludes","packingList","description","getRecurrenceForDashboard","rrule","today","repeating","repeats","repeatEvery","repeatOn","repeatBy","after","getUrl","getEventStartForDisplay","getEventEndForDisplay","getGoogleCalUrl","googleCalUrl","googleStart","googleEnd","summary","getColor","eventType","color","getEventType","getClasses","isArray","Array","getMetaData","meta","getMetaDataValue","recTracUrl","newLineSeparator","RegExp","startDateTime","endDateTime","metaArray","field","metaValue","recurrence","formatForDisplay","descriptionArray","shift","registrationStartMoment","registrationStart","registrationEndMoment","registrationEnd","startMoment","endMoment","diff","isSame","recurringEventId","editable","className","backgroundcolor","borderColor","textColor","shouldAdd","add","version","apiKey","getEvent","load","events","get","response","result","getEvents","calendarIds","requestTime","promises","calendarEvents","list","singleEvents","timeMin","timeMax","items","thisEvent","sort","a","b","isAfter","getRecurrenceForEvent","auth","request","insert","resource","execute","resp"],"mappings":"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","file":"dashboard-b447269c.js","sourcesContent":["(function(){\n  'use strict';\n\n  angular.module('sharedResources', [])\n    .constant('PLUGIN_ROOT', '/wp-content/plugins/bsu_events_manager')\n    .constant('SEPARATOR', '\\n\\n------------------------------\\n')\n    .constant('AT_SIGN_REPLACEMENT', '%%at%%')\n    .constant('FIELDS', {\n      CATEGORIES: 'Categories: ',\n      DETAILS_URL: 'Details URL: ',\n      FEE: 'Fee: ',\n      RECTRAC_URL: 'Registration URL: ',\n      REGISTRATION_URL: 'Registration URL: ',\n      REGISTRATION_DEADLINE: 'Registration deadline: ',\n      DATE_DESCRIPTION: 'Date description: ',\n      FIELD_TYPE: 'Field type: ',\n      UNIQUE_ICON_URL: 'Unique icon url: ',\n      START_DATE_TIME: 'Event start datetime: ',\n      END_DATE_TIME: 'Event end datetime: ',\n      OTHER_LOCATION: 'Location: ',\n      TRIP_INCLUDES: 'Trip includes: ',\n      PACKING_LIST: 'Packing list: '\n    })\n    .filter('unique', function() {\n      return function(collection, objectKey) {\n        var output = [],\n          keys = [];\n\n        angular.forEach(collection, function(item) {\n          var key = item;\n          angular.forEach(objectKey.split('.'), function(v){\n            key = key[v];\n          });\n          if(keys.indexOf(key) === -1) {\n            keys.push(key);\n            output.push(item);\n          }\n        });\n\n        return output;\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .directive('formHandler', ['$timeout', 'anchorSmoothScroll',\n      function ($timeout, anchorSmoothScroll) {\n        return {\n          scope: {\n            formHandlerCallback: '&'\n          },\n          restrict: 'A',\n          link: function (scope, elem) {\n\n            // set up event handler on the form element\n            elem.on('submit', function () {\n              // find the first invalid element\n              var firstInvalid = angular.element(elem[0].querySelector('.ng-invalid-required'))[0];\n\n              // if we find one set focus, else submit\n              if (firstInvalid) {\n                anchorSmoothScroll.scrollTo(firstInvalid);\n              } else {\n                scope.formHandlerCallback();\n                $timeout(function(){\n                  anchorSmoothScroll.scrollToTop();\n                }, 1500);\n              }\n            });\n          }\n        };\n      }]);\n  }());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .directive('newEventForm', ['PLUGIN_ROOT', '$modal', '$alert', 'appService', 'calendarService',\n      function (PLUGIN_ROOT, $modal, $alert, appService, calendarService) {\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/dashboard/newEventForm.html',\n          link: function(scope){\n            scope.calendarTypes = [];\n            scope.locations = [];\n            scope.staticCategories = [];\n            scope.fieldTypes = ['Turf Field', 'Grass Field'];\n            scope.event = {\n              iconUrl: '',\n              ends: {type: ''}\n            }; // Required for modal to work correctly\n\n            // Set up page\n            appService.runOnLoad()\n              .then(function(data){\n                scope.icons = data.icons;\n                scope.settings = data;\n                scope.locations = data.locations;\n                scope.staticCategories = data.staticCategories;\n                calendarService.init(data);\n                scope.calendarTypes = calendarService.calendarTypes();\n                setUp();\n              });\n\n            function setUp(){\n              scope.newEventForm.$setPristine();\n              scope.event = calendarService.getEmptyEvent();\n              scope.event.type = 'Fitness';\n              scope.event.repeat.ends.type = '';\n              scope.iconUrl = '';\n              scope.loading = false;\n              scope.addingEvent = false;\n              scope.submitted = false;\n            }\n\n            // Set up icon modal\n            var iconModal = $modal({\n              placement: 'center',\n              title: 'Select Unique Icon',\n              contentTemplate: PLUGIN_ROOT + '/templates/dashboard/iconsModal.html',\n              show: false,\n              scope: scope,\n              animation: 'am-fade',\n              backdropAnimation: 'am-fade'\n            });\n            scope.showIcons = function(){\n              iconModal.show();\n            };\n\n            scope.selectIcon = function(icon){\n              iconModal.toggle();\n              if(icon){\n                scope.event.iconUrl = icon.url.replace('http:', '').replace('https:', '');\n                scope.selectedIconName = icon.name;\n              } else {\n                scope.event.iconUrl = undefined;\n                scope.selectedIconName = undefined;\n              }\n            };\n\n            scope.toggle = function(attributeName, attributeValue){\n              var element = scope;\n              // Get property (e.g. a.b.c)\n              angular.forEach(attributeName.split('.'), function(piece){\n                element = element[piece];\n              });\n              var pos = element.indexOf(attributeValue);\n              if(pos > -1){ // Remove\n                element.splice(pos, 1);\n              } else { // Add\n                element.push(attributeValue);\n              }\n            };\n\n            scope.registrationRequired = function(isRequired) {\n              if(!isRequired){\n                scope.event.registration.deadline = '';\n              }\n              scope.event.registration.required = isRequired;\n            };\n\n            scope.addEvent = function () {\n              scope.submitted = true;\n              scope.addingEvent = true;\n              // Use field type as location for Fields\n              if(scope.event.type == 'Fields' && scope.event.fieldType !== undefined){\n                scope.event.location = scope.event.fieldType;\n              }\n              calendarService.create(scope.event)\n                .then(function(){\n                  scope.addingEvent = false;\n                  $alert({\n                    title: 'Success',\n                    content: 'Event was successfully added.',\n                    type: 'success',\n                    show: true,\n                    duration: 10,\n                    container: '#alerts-container'\n                  });\n                  setUp();\n                }, function(){\n                  scope.addingEvent = false;\n                  $alert({\n                    title: 'Error',\n                    content: 'There was an error adding event.',\n                    type: 'danger',\n                    show: true,\n                    duration: 10,\n                    container: '#alerts-container'\n                  });\n                });\n            };\n\n            // Reset categories when calendar is changed\n            scope.$watch('event.type', function(types){\n              if(types !== undefined) {\n                scope.event.categories = [types];\n              }\n            });\n\n            // Change end date when start date changes\n            scope.$watch('event.startDate', function(newStart, oldStart){\n              if(newStart === undefined || newStart == oldStart) return;\n              if(!scope.event.endDate || oldStart == scope.event.endDate){\n                scope.event.endDate = newStart;\n              }\n            });\n          }\n        };\n      }]);\n  }());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .directive('shortcodeForm', ['PLUGIN_ROOT',\n      function (PLUGIN_ROOT) {\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/dashboard/shortcodeForm.html',\n          link: function(scope){\n            scope.loading = false;\n            scope.selectedCategories = [];\n            scope.viewType = '';\n            scope.shortcode = '';\n            scope.weekDefault = '';\n            scope.viewTypes = [\n              {name: 'Dropins List', value: 'dropins'},\n              {name: 'Registration Deadlines', value: 'deadlines'},\n              {name: 'Week Calendar', value: 'calendar'},\n              {name: 'Week List', value: 'list'},\n              //{name: 'Week Both', value: 'both'},\n              {name: 'Trips', value: 'trips'},\n              {name: 'Outdoor Clinics', value: 'clinics'},\n              {name: 'Fields', value: 'fields'},\n              {name: 'Details page', value: 'details'}\n            ];\n\n            scope.createShortcode = function () {\n              if (scope.viewType === '') return;\n              scope.shortcode = '';\n              var cats = [];\n              angular.forEach(scope.selectedCategories, function (category) {\n                category = category.replace('-', '');\n                cats.push(category.trim());\n              });\n\n              if (scope.viewType == 'details') {\n                scope.shortcode = '[bsu_events_manager view=\"details\"]';\n              } else if (scope.viewType == 'deadlines') {\n                scope.shortcode = '[bsu_events_manager categories=\"Registration\" view=\"deadlines\"]';\n              } else if(scope.viewType == 'trips'){\n                scope.shortcode = '[bsu_events_manager categories=\"Trips\" view=\"trips\"]';\n              } else if(scope.viewType == 'clinics') {\n                scope.shortcode = '[bsu_events_manager categories=\"Clinics\" view=\"clinics\"]';\n              } else if(scope.viewType == 'fields'){\n                scope.shortcode = '[bsu_events_manager categories=\"Fields\" view=\"fields\"]';\n              } else if (scope.viewType != 'both' && cats.length > 0) {\n                scope.shortcode = '[bsu_events_manager categories=\"' + cats + '\" view=\"' + scope.viewType + '\"]';\n              } else if (cats.length > 0) {\n                scope.shortcode = '[bsu_events_manager categories=\"' + cats + '\" view=\"both\"]';\n              }\n            };\n          }\n        };\n      }]);\n  }());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .directive('times', function () {\n      return {\n        scope: {\n          time: '='\n        },\n        link: function (scope) {\n          // Create lists\n          scope.hoursList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n          scope.minutesList = ['00', 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55];\n          scope.amPmList = ['am', 'pm'];\n          // Defaults\n          scope.hours = 8;\n          scope.minutes = '00';\n          scope.amPm = 'am';\n          // Update time when values are changed\n          scope.$watch('[hours,minutes,amPm]', function () {\n            scope.time = scope.hours + ':' + scope.minutes + scope.amPm;\n          }, true);\n        },\n        template: '' +\n        '<select class=\"time\" ng-model=\"hours\" ng-options=\"hour for hour in hoursList\"></select>' +\n        '<select class=\"time\" ng-model=\"minutes\" ng-options=\"minute for minute in minutesList\"></select>' +\n        '<select class=\"time\" ng-model=\"amPm\" ng-options=\"which for which in amPmList\"></select>'\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .service('calendarService', ['$q', 'googleApiService', 'oAuthService', 'eventService',\n      function ($q, googleApiService, oAuthService, eventService) {\n        var settings;\n\n        this.init = function(data){\n          settings = data;\n          oAuthService.init(settings);\n        };\n\n        this.calendarTypes = function () {\n          var types = [];\n          angular.forEach(settings.calendars, function (calendar) {\n            if (calendar.name != 'Registration') {\n              types.push(calendar.name);\n            }\n          });\n          return types;\n        };\n\n        this.getEmptyEvent = function(){\n          return eventService.getEmptyEvent();\n        };\n\n        this.create = function (event) {\n          var formattedEvent = eventService.formatForDashboard(event);\n          var defer = $q.defer();\n\n          oAuthService.checkAuth(function() {\n            addEvent(event.type, formattedEvent)\n              .then(function(){\n                // If registration is required, add to registration calendar\n                if (event.registration.required === true) {\n                  var registrationEvent = eventService.formatRegistration(event);\n                  addEvent('Registration', registrationEvent)\n                    .then(function(){\n                      defer.resolve();\n                    });\n                } else {\n                  defer.resolve();\n                }\n              }, function(){\n                defer.reject();\n              });\n          });\n\n          return defer.promise;\n        };\n\n        function getCalendarId(calendarName) {\n          var id = '';\n          angular.forEach(settings.calendars, function (calendar) {\n            if (calendar.name == calendarName) {\n              id = calendar.id;\n            }\n          });\n\n          return id;\n        }\n\n        function addEvent(calendarName, event) {\n          var calendarId = getCalendarId(calendarName);\n          return googleApiService.createEvent(calendarId, event);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsAdminApp')\n    .service('oAuthService', ['$rootScope', 'googleApiService',\n      function ($rootScope, googleApiService) {\n        var scopes = ['https://www.googleapis.com/auth/calendar'];\n        var settings;\n        var immediate = false;\n        var accessToken, clientId;\n\n        this.init = function (s) {\n          settings = s;\n          googleApiService.authorize({\n            client_id: settings.clientId,\n            scope: scopes,\n            immediate: true\n          }, function(authResponse) {\n            accessToken = authResponse.access_token;\n            clientId = authResponse.client_id;\n            if (authResponse && !authResponse.error) {\n              immediate = true;\n            }\n          });\n        };\n\n        this.checkAuth = function (callback) {\n          var data = {\n            client_id: settings.clientId,\n            scope: scopes,\n            immediate: immediate\n          };\n          return googleApiService.checkAuth(data, function(authResponse) {\n            if (authResponse && !authResponse.error) {\n              callback();\n            }\n          });\n        };\n\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .controller('MainCtrl', ['$scope', '$timeout', 'appService',\n      function ($scope, $timeout, appService) {\n        var data;\n        $scope.categories = [];\n\n        $scope.init = function(d){\n          data = angular.fromJson(d);\n          $scope.loading = false;\n          $scope.categories = data.categories.all;\n          $scope.view = data.view;\n          $scope.detailsPage = data.detailsPage;\n          $scope.calendarId = data.calendarId;\n          $scope.eventId = data.eventId;\n          $scope.settings = data; // TODO: delete\n          appService.init(data);\n          loadApp();\n        };\n\n        // Wait for gapi to load\n        function loadApp(){\n          $timeout(function(){\n            if(gapi === undefined || gapi.client === undefined || gapi.client.setApiKey === undefined){\n              loadApp();\n            } else {\n              appService.appIsLoaded();\n            }\n          }, 5);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .directive('loading', function () {\n      return {\n        template: '<div class=\"bsuEventSpinner\"></loading>'\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .directive('selectOnClick', function () {\n      return {\n        restrict: 'A',\n        link: function (scope, elem) {\n          elem.on('click', function () {\n            this.select();\n          });\n        }\n      };\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('anchorSmoothScroll', ['$document', '$window',\n      function ($document, $window) {\n        var document = $document[0],\n          window = $window,\n          self = this;\n\n        this.scrollToTop = function(){\n          self.scrollTo(document.getElementsByTagName('head')[0]);\n        };\n\n        this.scrollTo = function (element) {\n          if (element) {\n            var startY = getCurrentPagePosition(window, document);\n            var stopY = getElementY(document, element);\n            var distance = stopY > startY ? stopY - startY : startY - stopY;\n\n            if (distance < 100) {\n              this.scrollToTop(stopY);\n            } else {\n              var defaultSpeed = Math.round(distance / 80);\n              var speed = defaultSpeed > 20 ? 20 : defaultSpeed;\n              if (stopY > startY) {\n                scrollDown(startY, stopY, speed, distance);\n              } else {\n                scrollUp(startY, stopY, speed, distance);\n              }\n            }\n          }\n        };\n\n        function getCurrentPagePosition(window, document) {\n          // Firefox, Chrome, Opera, Safari\n          if (window.pageYOffset) return window.pageYOffset;\n          // Internet Explorer 6 - standards mode\n          if (document.documentElement && document.documentElement.scrollTop)\n            return document.documentElement.scrollTop;\n          // Internet Explorer 6, 7 and 8\n          if (document.body.scrollTop) return document.body.scrollTop;\n          return 0;\n        }\n\n        function getElementY(document, element) {\n          var y = element.offsetTop;\n          var node = element;\n          while (node.offsetParent && node.offsetParent != document.body) {\n            node = node.offsetParent;\n            y += node.offsetTop;\n          }\n          return y;\n        }\n\n        function scrollDown(startY, stopY, speed, distance) {\n          var timer = 0;\n          var step = Math.round(distance / 25);\n          var leapY = startY + step;\n\n          for (var i = startY; i < stopY; i += step) {\n            setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n            leapY += step;\n            if (leapY > stopY) leapY = stopY;\n            timer++;\n          }\n        }\n\n        function scrollUp(startY, stopY, speed, distance) {\n          var timer = 0;\n          var step = Math.round(distance / 25);\n          var leapY = startY - step;\n\n          for (var i = startY; i > stopY; i -= step) {\n            setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n            leapY -= step;\n            if (leapY < stopY) leapY = stopY;\n            timer++;\n          }\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('appService', ['$http', '$q', 'googleApiService', 'PLUGIN_ROOT', 'AT_SIGN_REPLACEMENT',\n      function ($http, $q, googleApiService, PLUGIN_ROOT, AT_SIGN_REPLACEMENT) {\n        var data;\n        var loadPromise = $q.defer();\n\n        this.init = function(d){\n          data = d;\n        };\n\n        this.runOnLoad = function(){\n          return loadPromise.promise;\n        };\n\n        this.appIsLoaded = function(){\n          loadPromise.resolve(loadApp());\n        };\n\n        function loadApp() {\n          // Get categories\n          var categories = [];\n          angular.forEach(data.categories.all, function (category) {\n            categories.push({\n              name: category.name,\n              parent: category.name\n            });\n\n            angular.forEach(category.children, function (childCategory) {\n              categories.push({\n                name: childCategory,\n                parent: category.name\n              });\n            });\n          });\n\n          // Replace @ sign (WP theme tries removing this from url)\n          if(data.calendarId){\n            data.calendarId = data.calendarId.replace(AT_SIGN_REPLACEMENT, '@');\n          }\n\n          // Get categories to display\n          var view = data.categories.view;\n          var categoriesToDisplay = [];\n          if (view !== undefined && view.length > 0) {\n            categoriesToDisplay = view === 'all' ? categories : view.split(',');\n          }\n          var settings = {\n            categories: categories,\n            view: categoriesToDisplay,\n            calendarId: data.calendarId,\n            eventId: data.eventId,\n            clientId: data.clientId,\n            detailsPage: data.detailsPage,\n            calendars: data.calendars,\n            eventTypes: data.eventTypes,\n            locations: data.locations,\n            staticCategories: data.staticCategories\n          };\n          if(data.icons !== undefined){\n            settings.icons = data.icons;\n          }\n\n          googleApiService.init(data);\n\n          var defer = $q.defer();\n          defer.resolve(settings);\n\n          return defer.promise;\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('dateService', function () {\n\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n\n      this.getDateString = function (date, format, timezone) {\n        if (format === undefined) {\n          format = 'YYYY-MM-DD';\n        }\n        var dateString = moment(date, ['MM/DD/YYYY']).format(format);\n        if (timezone !== undefined) {\n          dateString += 'Z';// + (moment().isDST() ? '-06:00' : '-07:00');\n        }\n\n        return dateString;\n      };\n\n      this.getDateTimeString = function (date, time) {\n        var timezone = moment().isDST() ? '-06:00' : '-07:00';\n        return moment(pad(date) + pad(time), ['MM/DD/YYYY h:mma'])\n          .format('YYYY-MM-DDTHH:mm:ss' + timezone);\n      };\n\n      this.getDaysString = function(days) {\n        var recurrenceDays = [];\n        angular.forEach(days, function(day) {\n          switch (day) {\n            case 'MO':\n              recurrenceDays.push('M');\n              break;\n            case 'TU':\n              recurrenceDays.push('Tu');\n              break;\n            case 'WE':\n              recurrenceDays.push('W');\n              break;\n            case 'TH':\n              recurrenceDays.push('Th');\n              break;\n            case 'FR':\n              recurrenceDays.push('F');\n              break;\n            case 'SA':\n              recurrenceDays.push('Sa');\n              break;\n            case 'SU':\n              recurrenceDays.push('Su');\n              break;\n          }\n        });\n\n        return recurrenceDays.join('/');\n      };\n\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('eventService', ['dateService', 'FIELDS', 'SEPARATOR', 'AT_SIGN_REPLACEMENT',\n      function (dateService, FIELDS, SEPARATOR, AT_SIGN_REPLACEMENT) {\n        var settings;\n        var dateDescriptionNewLineSeparator = '|---|';\n\n        this.init = function(s){\n          settings = s;\n        };\n\n        this.getEmptyEvent = function () {\n          return {\n            type: null,\n            name: null,\n            startDate: null,\n            startTime: '8:00am',\n            endDate: null,\n            endTime: '8:00am',\n            allDay: false,\n            repeat: {\n              repeating: false,\n              repeats: 'WEEKLY',\n              repeatEvery: 1,\n              repeatOn: [],\n              repeatBy: 'dayOfWeek',\n              ends: {\n                type: 'never',\n                after: null,\n                on: null\n              }\n            },\n            categories: [],\n            location: null,\n            description: null,\n            detailsUrl: null,\n            fee: null,\n            registration: {\n              required: false,\n              deadline: null\n            },\n            recTracId: null\n          };\n        };\n\n        this.formatRegistration = function (event) {\n          event.startDate = event.registration.deadline;\n          event.endDate = event.registration.deadline;\n          event.allDay = true;\n          var description = getDescriptionWithMetaData(event);\n          var start = getStartTimeForDashboard(event);\n          var end = getEndTimeForDashboard(event);\n\n          return {\n            summary: event.name,\n            name: event.name,\n            description: description,\n            start: start,\n            end: end\n          };\n        };\n\n        this.formatForDashboard = function (event) {\n\n          var description = getDescriptionWithMetaData(event);\n          var start = getStartTimeForDashboard(event);\n          var end = getEndTimeForDashboard(event);\n          var recurrence = getRecurrenceForDashboard(event);\n          return {\n            summary: event.name,\n            name: event.name,\n            description: description,\n            location: event.location,\n            start: start,\n            end: end,\n            recurrence: recurrence\n          };\n        };\n\n        this.formatForDisplay = function(event, calendarId){\n          var description,\n            metadata,\n            descriptionArray = [];\n          if(event.description !== undefined){\n            descriptionArray = event.description.split(SEPARATOR);\n            if(isArray(descriptionArray)){\n              description = descriptionArray.shift();\n              metadata = descriptionArray.shift();\n            } else {\n              description = descriptionArray;\n            }\n          }\n\n          metadata = getMetaData(metadata);\n\n          // Get start and end\n          var start = getEventStartForDisplay(event);\n          var end = getEventEndForDisplay(event);\n          var startMoment = moment(start, ['YYYY-MM-DDTHH:mm:ssZ']);\n          var endMoment = moment(end, ['YYYY-MM-DDTHH:mm:ssZ']);\n\n          var eventType = getEventType(metadata);\n          var color = getColor(eventType);\n          var title = event.summary;\n          var fieldType = metadata.fieldType;\n\n          var registrationStartMoment, registrationStart, registrationEndMoment, registrationEnd;\n\n          if(metadata.registration && metadata.registration.startDateTime){\n            registrationStartMoment = moment(metadata.registration.startDateTime, 'MM/DD/YYYY h:mma');\n            registrationStart = registrationStartMoment.format('YYYY-MM-DD');\n          }\n          if(metadata.registration && metadata.registration.endDateTime){\n            registrationEndMoment = moment(metadata.registration.endDateTime, 'MM/DD/YYY h:mma');\n            registrationEnd = registrationEndMoment.format('YYYY-MM-DD');\n          }\n\n          return {\n            id: event.id,\n            calendarId: calendarId,\n            description: description,\n            location: event.location,\n            dateDescription: metadata.dateDescription,\n            start: start,\n            startMoment: startMoment,\n            end: end,\n            endMoment: endMoment,\n            duration: endMoment.diff(startMoment, 'minutes'),\n            registrationStartMoment: registrationStartMoment,\n            registrationStart: registrationStart,\n            registrationEndMoment: registrationEndMoment,\n            registrationEnd: registrationEnd,\n            allDay: startMoment.isSame(endMoment),\n            summary: event.summary,\n            title: title,\n            categories: metadata.categories,\n            fee: metadata.fee,\n            url: getUrl(event, calendarId, metadata),\n            googleCalUrl: getGoogleCalUrl(event, calendarId, startMoment, endMoment, description),\n            recTracUrl: metadata.recTracUrl,\n            iconUrl: metadata.iconUrl,\n            recurrence: event.recurrence,\n            recurringEventId: event.recurringEventId,\n            registration: {\n              url: metadata.registration.url,\n              deadline: metadata.registration.deadline\n            },\n            fieldType: fieldType,\n            editable: false,\n            className: getClasses(metadata),\n            color: color,\n            type: eventType,\n            backgroundcolor: color,\n            borderColor: '',\n            textColor: '#F6F6F5',\n            otherLocationDescription: metadata.otherLocationDescription,\n            tripIncludes: metadata.tripIncludes,\n            packingList: metadata.packingList\n          };\n        };\n\n        function getStartTimeForDashboard(event) {\n          var start = {\n            timeZone: \"America/Boise\"\n          };\n          if (event.allDay === true) {\n            start.date = dateService.getDateString(event.startDate);\n          } else {\n            start.dateTime = dateService.getDateTimeString(event.startDate, event.startTime);\n          }\n\n          return start;\n        }\n\n        function getEndTimeForDashboard(event) {\n          var end = {\n            timeZone: \"America/Boise\"\n          };\n          if (event.allDay === true) {\n            end.date = dateService.getDateString(event.endDate);\n          } else {\n            end.dateTime = dateService.getDateTimeString(event.endDate, event.endTime);\n          }\n\n          return end;\n        }\n\n        function getDescriptionWithMetaData(event) {\n          // Create metadata array\n          var metadata = [];\n          if (event.categories.length > 0) {\n            metadata.push(FIELDS.CATEGORIES + event.categories.toString().replace(/- /g, ''));\n          }\n          if (event.detailsUrl !== null) {\n            metadata.push(FIELDS.DETAILS_URL + event.detailsUrl);\n          }\n          if (event.fee !== null) {\n            if([undefined, 0, '$0', 'free', 'Free'].indexOf(event.fee) > -1){\n              metadata.push(FIELDS.FEE + 'Free');\n            } else {\n              metadata.push(FIELDS.FEE + '$' + event.fee.replace('$', ''));\n            }\n          } else {\n            metadata.push(FIELDS.FEE + 'free');\n          }\n          if (event.recTracId !== null) {\n            var url = 'https://reconline.boisestate.edu/wbwsc/webtrac.wsc/wbsearch.html?xxsearch=yes&xxactivitynumber=' + event.recTracId;\n            metadata.push(FIELDS.RECTRAC_URL + url);\n          }\n          if (event.registration.required === true) {\n            metadata.push(FIELDS.REGISTRATION_DEADLINE + event.registration.deadline);\n          }\n          if(event.dateDescription){\n            var dateDescription = event.dateDescription.replace(/\\n/g, dateDescriptionNewLineSeparator);\n            metadata.push(FIELDS.DATE_DESCRIPTION + dateDescription);\n          }\n          if(event.fieldType){\n            metadata.push(FIELDS.FIELD_TYPE + event.fieldType);\n          }\n          if(event.iconUrl){\n            metadata.push(FIELDS.UNIQUE_ICON_URL + event.iconUrl);\n          }\n          if(event.registration.required){\n            metadata.push(FIELDS.START_DATE_TIME + event.startDate + ' ' + event.startTime);\n            metadata.push(FIELDS.END_DATE_TIME + event.endDate + ' ' + event.endTime);\n          }\n          if(event.otherLocationDescription){\n            metadata.push(FIELDS.OTHER_LOCATION + event.otherLocationDescription);\n          }\n          if(event.tripIncludes){\n            metadata.push(FIELDS.TRIP_INCLUDES + event.tripIncludes);\n          }\n          if(event.packingList){\n            metadata.push(FIELDS.PACKING_LIST + event.packingList);\n          }\n\n          if (metadata.length > 0) {\n            metadata = SEPARATOR + metadata.join('\\n');\n          }\n\n          return event.description + metadata;\n        }\n\n        function getRecurrenceForDashboard(event) {\n          // Get recurrence\n          var today = moment(), rrule;\n\n          if (event.repeat.repeating === true) {\n            rrule = 'RRULE:FREQ=' + event.repeat.repeats + ';INTERVAL=' + event.repeat.repeatEvery + ';';\n            var days = event.repeat.repeatOn.join(',');\n\n            if(event.repeat.repeatBy == 'dayOfMonth'){\n              rrule += 'BYMONTHDAY=' + today.format('D') + ';';\n            } else if(event.repeat.repeatOn.length > 0){\n              rrule += 'BYDAY=' + days + ';';\n            }\n          }\n\n          if (event.repeat.ends.type == 'on') {\n            rrule += 'UNTIL=' + dateService.getDateString(event.repeat.ends.on, 'YYYYMMDDTHHmmss', true) + ';';\n          } else if (event.repeat.ends.type == 'after') {\n            rrule += 'COUNT=' + event.repeat.ends.after + ';';\n          }\n\n          if(rrule === undefined){\n            return [];\n          } else {\n            return [rrule];\n          }\n        }\n\n        function getUrl(event, calendarId, metadata){\n          if(metadata.detailsUrl !== undefined){\n            return metadata.detailsUrl;\n          }\n          var url = settings.detailsPage;\n          url += url.indexOf('?') > -1 ? '&' : '?';\n          url += 'id=' + event.id + '&cal=' + calendarId;\n          return url.replace('@', AT_SIGN_REPLACEMENT);\n        }\n\n        function getEventStartForDisplay(event){\n          if(event.start.date !== undefined){\n            return event.start.date;\n          }\n          return event.start.dateTime;\n        }\n\n        function getEventEndForDisplay(event){\n          if(event.end.date !== undefined){\n            return event.end.date;\n          }\n          return event.end.dateTime;\n        }\n\n        function getGoogleCalUrl(event, calendarId, start, end, description){\n          var googleCalUrl;\n          if(calendarId && event.id){\n            var googleStart = start.format('YYYYMMDDTHHmmss');\n            var googleEnd = end.format('YYYYMMDDTHHmmss');\n            googleCalUrl = \"http://www.google.com/calendar/event?action=TEMPLATE\" +\n            \"&text=\" + event.summary +\n            \"&dates=\" + googleStart + \"/\" + googleEnd +\n            \"&details=\" + description +\n            \"&location=\" + event.location +\n            \"&trp=false\";\n          }\n          return googleCalUrl;\n        }\n\n        function getColor(eventType){\n          var color = '#000';\n          angular.forEach(settings.eventTypes, function(type){\n            if(type.name == eventType){\n              color = type.color;\n            }\n          });\n          return color;\n        }\n\n        function getEventType(metadata){\n          var eventType = 'default';\n          if(!metadata || !metadata.categories) {\n            return eventType;\n          }\n          if(metadata.categories.indexOf('Drop Ins') > -1) {\n            eventType = 'dropin';\n          }\n          if(metadata.categories.indexOf('Reserved') > -1){\n            eventType = 'reserved';\n          }\n          if(metadata.registration.deadline && metadata.fee != 'free'){\n            eventType = 'premium';\n          }\n          if(metadata.categories.indexOf('Special Event') > -1){\n            eventType = 'other';\n          }\n          if(metadata.categories.indexOf('Fields') > -1){\n            if(metadata.fieldType == 'Turf Field'){\n              eventType = 'turfField';\n            } else if(metadata.fieldType == 'Grass Field'){\n              eventType = 'grassField';\n            }\n          }\n\n          return eventType;\n        }\n\n        function getClasses(metadata){\n          return metadata.categories;\n        }\n\n        function isArray(value){\n          return value instanceof Array;\n        }\n\n        function getMetaData(meta){\n          var metadata = {\n            registration: {}\n          };\n          if(meta !== undefined){\n            meta = meta.split('\\n');\n          }\n          if(!isArray(meta)){\n            return {\n              categories: null,\n              detailsUrl: null,\n              fee: null,\n              registration: {\n                url: null,\n                deadline: null\n              }\n            };\n          }\n          // Check for categories\n          var categories = getMetaDataValue(meta, FIELDS.CATEGORIES);\n          if(categories !== undefined){\n            metadata.categories = categories.split(',');\n            if(!isArray(metadata.categories)){\n              metadata.categories = [metadata.categories];\n            }\n          } else {\n            metadata.categories = [];\n          }\n          // Check for details url\n          metadata.detailsUrl = getMetaDataValue(meta, FIELDS.DETAILS_URL);\n          // Check for fee\n          metadata.fee = getMetaDataValue(meta, FIELDS.FEE);\n          // Check for registration url\n          metadata.registration.url = getMetaDataValue(meta, FIELDS.REGISTRATION_URL);\n          // Check for registration deadline\n          metadata.registration.deadline = getMetaDataValue(meta, FIELDS.REGISTRATION_DEADLINE);\n          // Check for RecTrac URL\n          metadata.recTracUrl = getMetaDataValue(meta, FIELDS.RECTRAC_URL);\n          // Check for date description (used in trips and outdoors)\n          metadata.dateDescription = getMetaDataValue(meta, FIELDS.DATE_DESCRIPTION);\n          // Check for unique icon url\n          metadata.iconUrl = getMetaDataValue(meta, FIELDS.UNIQUE_ICON_URL);\n          if(metadata.dateDescription){\n            // Relace new line separator with line break\n            var newLineSeparator = dateDescriptionNewLineSeparator.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n            metadata.dateDescription = metadata.dateDescription.replace(new RegExp(newLineSeparator, 'g'), \"<br />\");\n          }\n          metadata.fieldType = getMetaDataValue(meta, FIELDS.FIELD_TYPE);\n          metadata.registration.startDateTime = getMetaDataValue(meta, FIELDS.START_DATE_TIME);\n          metadata.registration.endDateTime = getMetaDataValue(meta, FIELDS.END_DATE_TIME);\n\n          metadata.otherLocationDescription = getMetaDataValue(meta, FIELDS.OTHER_LOCATION);\n          metadata.tripIncludes = getMetaDataValue(meta, FIELDS.TRIP_INCLUDES);\n          metadata.packingList = getMetaDataValue(meta, FIELDS.PACKING_LIST);\n\n          return metadata;\n        }\n\n        function getMetaDataValue(metaArray, field){\n          var metaValue;\n          angular.forEach(metaArray, function(value){\n            if(value.indexOf(field) > -1){\n              metaValue = value.replace(field, '');\n            }\n          });\n          return metaValue;\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .service('googleApiService', ['$q', 'eventService',\n      function ($q, eventService) {\n        var version = 'v3';\n\n        this.init = function(settings){\n          gapi.client.setApiKey(settings.apiKey);\n          eventService.init(settings);\n        };\n\n        this.getEvent = function(calendarId, eventId) {\n          var defer = $q.defer();\n          if(!calendarId || !eventId){\n            defer.reject('Calendar not found.');\n            return defer.promise;\n          }\n          gapi.client.load('calendar', version).then(function(){\n            gapi.client.calendar.events.get({\n                'calendarId': calendarId,\n                'eventId': eventId\n              }).then(function(response){\n                var event = eventService.formatForDisplay(response.result, calendarId);\n                defer.resolve(event);\n              }, function(){\n                defer.reject('Error loading calendar event.');\n              });\n          });\n\n          return defer.promise;\n        };\n\n        this.getEvents = function(calendarIds, categories, start, end){\n          var requestTime = moment();\n          var promises = [];\n          var calendarEvents = [];\n          return gapi.client.load('calendar', version)\n            .then(function(){\n              angular.forEach(calendarIds, function(calendarId){\n                if(calendarId !== null){\n                  var promise = gapi.client.calendar.events.list({\n                    'calendarId': calendarId,\n                    'singleEvents': true,\n                    'timeMin': start,\n                    'timeMax': end\n                  })\n                  .then(function(response){\n                    angular.forEach(response.result.items, function(event){\n                      var thisEvent = eventService.formatForDisplay(event, calendarId);\n                      if(shouldAdd(thisEvent, categories)){\n                        calendarEvents.push(thisEvent);\n                      }\n                    });\n                  });\n                  promises.push(promise);\n                }\n              });\n              return $q.all(promises)\n                .then(function(){\n                  calendarEvents = calendarEvents.sort(function(a, b){\n                    if(a.startMoment.isSame(b.startMoment)){\n                      return 0;\n                    } else if(a.startMoment.isAfter(b.startMoment)){\n                      return 1;\n                    } else {\n                      return -1;\n                    }\n                  });\n                  return {\n                    events: calendarEvents,\n                    requestTime: requestTime\n                  };\n                });\n          });\n        };\n\n        this.getRecurrenceForEvent = function(event, callback){\n          var defer = $q.defer();\n          if(event.recurrence === undefined && event.recurringEventId !== undefined){\n            gapi.client.load('calendar', version).then(function(){\n              gapi.client.calendar.events.get({\n                'calendarId': event.calendarId,\n                'eventId': event.recurringEventId\n              }).then(function(response){\n                defer.resolve(response.result.recurrence.shift());\n              }, function(){\n                defer.reject('Original recurring event not found.');\n              });\n            });\n          } else {\n            callback(event.recurrence);\n          }\n          return defer.promise;\n        };\n\n        this.authorize = function(data, callback){\n          gapi.auth.authorize(data, callback);\n        };\n\n        this.checkAuth = function(data, callback){\n          return gapi.auth.authorize(data, callback);\n        };\n\n        this.createEvent = function(calendarId, event){\n          var defer = $q.defer();\n          gapi.client.load('calendar', version).then(function () {\n            var request = gapi.client.calendar.events.insert({\n              calendarId: calendarId,\n              resource: event\n            });\n            request.execute(function (resp) {\n              if (resp.error) {\n                defer.reject('There was an error adding event.');\n              } else {\n                defer.resolve();\n              }\n            });\n          });\n\n          return defer.promise;\n        };\n\n        function shouldAdd(event, categories){\n          if(categories === undefined || categories.length === 0){\n            return true;\n          }\n          var add = false;\n          angular.forEach(categories, function(category){\n            if(category == 'Registration' ||\n              (event.categories && event.categories.indexOf(category.name) > -1)) {\n              add = true;\n            }\n          });\n          return add;\n        }\n\n      }]);\n}());"],"sourceRoot":"/source/"}