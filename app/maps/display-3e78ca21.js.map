{"version":3,"sources":["app.js","filters.js","controllers/EventsCtrl.js","directives/bothViewDirective.js","directives/calendarViewDirective.js","directives/clinicsViewDirective.js","directives/deadlinesViewDirective.js","directives/detailsViewDirective.js","directives/dropinsViewDirective.js","directives/fieldsViewDirective.js","directives/listViewDirective.js","directives/tripNotesDirective.js","directives/tripsViewDirective.js","services/calendarService.js","controllers/MainCtrl.js","directives/loadingDirective.js","directives/selectOnClickDirective.js","services/anchorSmoothScrollService.js","services/appService.js","services/dateService.js","services/eventService.js","services/googleApiService.js"],"names":["angular","module","filter","input","indexOf","split","moment","format","isMoment","event","start","end","date","inputArray","isArray","Array","join","length","undefined","money","replace","isNaN","classes","fitnessIcon","poolIcon","rockWallIcon","push","time","hours","Math","floor","minutes","events","forEach","add","deadline","title","$sce","trustAsHtml","controller","$scope","appService","calendarService","loadEvents","getEvents","then","data","lastRequestTime","isAfter","requestTime","eventsList","list","id","sort","a","b","startMoment","isSame","eventTitles","getEventTitles","shouldLoadEvents","runOnLoad","init","$on","directive","$rootScope","PLUGIN_ROOT","templateUrl","link","scope","selectedView","changeView","type","startOf","setEventData","addEvents","allEvents","eventCal","fullCalendar","className","eventTitle","defaultEventTitle","concat","eventTypes","types","map","eventType","name","$apply","weekNum","element","getDefaultEventTitle","loading","currentEventTypes","$emit","handleWindowResize","defaultView","allDaySlot","minTime","scrollTime","aspectRatio","eventAfterAllRender","isLoading","$watch","click","clone","results","getRegistrationDeadlines","noEventsToday","dateService","getRecurrence","recurrence","days","pop","getDaysString","until","piece","sessionEndsOn","noEventFound","getEvent","recurringEventId","day","toUpperCase","getDropins","filterDropins","categories","turfFieldColor","color","grassFieldColor","service","$filter","googleApiService","getCalendarIds","calendarIds","calendars","calendar","views","getEventsForCalendars","c","eventCats","getDateTimeString","this","d","view","trim","calendarId","eventId","subtract","endOf","getRecurrenceForEvent","cats","category","parent","titles","allDay","constant","CATEGORIES","DETAILS_URL","FEE","RECTRAC_URL","REGISTRATION_URL","REGISTRATION_DEADLINE","DATE_DESCRIPTION","FIELD_TYPE","UNIQUE_ICON_URL","START_DATE_TIME","END_DATE_TIME","OTHER_LOCATION","TRIP_INCLUDES","PACKING_LIST","collection","objectKey","output","keys","item","key","v","$timeout","loadApp","gapi","client","setApiKey","appIsLoaded","fromJson","all","detailsPage","settings","template","restrict","elem","on","select","$document","$window","getCurrentPagePosition","window","document","pageYOffset","documentElement","scrollTop","body","getElementY","y","offsetTop","node","offsetParent","scrollDown","startY","stopY","speed","distance","timer","step","round","leapY","i","setTimeout","scrollUp","self","scrollToTop","scrollTo","getElementsByTagName","defaultSpeed","$http","$q","AT_SIGN_REPLACEMENT","children","childCategory","categoriesToDisplay","clientId","locations","staticCategories","icons","defer","resolve","promise","loadPromise","pad","n","getDateString","timezone","dateString","isDST","recurrenceDays","FIELDS","SEPARATOR","getStartTimeForDashboard","timeZone","startDate","dateTime","startTime","getEndTimeForDashboard","endDate","endTime","getDescriptionWithMetaData","metadata","toString","detailsUrl","fee","recTracId","url","registration","required","dateDescription","dateDescriptionNewLineSeparator","fieldType","iconUrl","otherLocationDescription","tripIncludes","packingList","description","getRecurrenceForDashboard","rrule","today","repeat","repeating","repeats","repeatEvery","repeatOn","repeatBy","ends","after","getUrl","getEventStartForDisplay","getEventEndForDisplay","getGoogleCalUrl","googleCalUrl","googleStart","googleEnd","summary","location","getColor","getEventType","getClasses","value","getMetaData","meta","getMetaDataValue","recTracUrl","newLineSeparator","RegExp","startDateTime","endDateTime","metaArray","field","metaValue","s","getEmptyEvent","formatRegistration","formatForDashboard","formatForDisplay","descriptionArray","shift","registrationStartMoment","registrationStart","registrationEndMoment","registrationEnd","endMoment","duration","diff","editable","backgroundcolor","borderColor","textColor","eventService","shouldAdd","version","apiKey","load","get","response","result","reject","promises","calendarEvents","singleEvents","timeMin","timeMax","items","thisEvent","callback","authorize","auth","checkAuth","createEvent","request","insert","resource","execute","resp","error"],"mappings":"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","file":"display-3e78ca21.js","sourcesContent":["(function(){\n  'use strict';\n\n  angular.module('sharedResources', [])\n    .constant('PLUGIN_ROOT', '/wp-content/plugins/bsu_events_manager')\n    .constant('SEPARATOR', '\\n\\n------------------------------\\n')\n    .constant('AT_SIGN_REPLACEMENT', '%%at%%')\n    .constant('FIELDS', {\n      CATEGORIES: 'Categories: ',\n      DETAILS_URL: 'Details URL: ',\n      FEE: 'Fee: ',\n      RECTRAC_URL: 'Registration URL: ',\n      REGISTRATION_URL: 'Registration URL: ',\n      REGISTRATION_DEADLINE: 'Registration deadline: ',\n      DATE_DESCRIPTION: 'Date description: ',\n      FIELD_TYPE: 'Field type: ',\n      UNIQUE_ICON_URL: 'Unique icon url: ',\n      START_DATE_TIME: 'Event start datetime: ',\n      END_DATE_TIME: 'Event end datetime: ',\n      OTHER_LOCATION: 'Location: ',\n      TRIP_INCLUDES: 'Trip includes: ',\n      PACKING_LIST: 'Packing list: '\n    })\n    .filter('unique', function() {\n      return function(collection, objectKey) {\n        var output = [],\n          keys = [];\n\n        angular.forEach(collection, function(item) {\n          var key = item;\n          angular.forEach(objectKey.split('.'), function(v){\n            key = key[v];\n          });\n          if(keys.indexOf(key) === -1) {\n            keys.push(key);\n            output.push(item);\n          }\n        });\n\n        return output;\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp', ['sharedResources'])\n\n    .filter('time', function(){\n      return function(input){\n        if(!input || (input.indexOf('T') < 0 || input.indexOf('-') < 0)) return;\n        input = input.split('T')[1].split('-')[0];\n        return moment(input, 'HH:mm:ss').format('h:mm a');\n      };\n    })\n    .filter('momentTime', function(){\n      return function(input){\n        if(!input || !moment.isMoment(input)) return;\n        return input.format('h:mma');\n      };\n    })\n    .filter('timeRange', function(){\n      return function(event){\n        if(!event) return;\n        var start = event.start;\n        var end = event.end;\n        if(start.indexOf('T') < 0 || start.indexOf('-') < 0) return;\n        if(end.indexOf('T') < 0 || end.indexOf('-') < 0) return;\n        start = start.split('T')[1].split('-')[0];\n        start = moment(start, 'HH:mm:ss').format('h:mm');\n        end = end.split('T')[1].split('-')[0];\n        end = moment(end, 'HH:mm:ss').format('h:mma');\n        return start + '-' + end;\n      };\n    })\n    .filter('date', function(){\n      return function(input){\n        if(!input) return;\n        var date;\n        if(input.indexOf('T') > -1){\n          var inputArray = input.split('T');\n          date = moment(inputArray[0], ['MM/DD', 'YYYY-MM-DD']);\n        } else {\n          date = moment(input, 'YYYY-MM-DD');\n        }\n        return date.format('MM/DD');\n      };\n    })\n    .filter('fullDate', function(){\n      return function(input){\n        if(!input) return;\n        var date;\n        if(input.indexOf('T') > -1){\n          var inputArray = input.split('T');\n          date = moment(inputArray[0], ['MM/DD', 'YYYY-MM-DD']);\n        } else {\n          date = moment(input, ['YYYY-MM-DD', 'MM-DD-YYYY', 'MM/DD/YYYY']);\n        }\n        return date.format('MMMM D, YYYY');\n      };\n    })\n    .filter('arrayToString', function(){\n      return function(input){\n        var isArray = input instanceof Array;\n        if(!input || !isArray) {\n          return;\n        }\n        return input.join(' ');\n      };\n    })\n    .filter('recurrenceDays', function(){\n      return function(input){\n        if(!input || input.length === 0) return;\n        return '(' + input.join('/') + ')';\n      };\n    })\n    .filter('fee', function(){\n      return function(input) {\n        if(!input) return;\n        if([undefined, '', '$Free', 'Free', 'free', 0, '$0'].indexOf(input) > -1) {\n          return 'Free';\n        }\n        var money = input.replace('.00', '');\n        if(isNaN(money)){\n          return money;\n        }\n        if(money.indexOf('$') === -1) money = '$' + money;\n        return money;\n      };\n    })\n    .filter('arrayToIconClasses', function(){\n      return function(classes){\n        var isArray = classes instanceof Array;\n        if(!classes || !isArray) {\n          return;\n        }\n        var fitnessIcon = 'icon-heattimer';\n        var poolIcon = 'icon-swimming1';\n        var rockWallIcon = 'icon-climbing';\n        if(classes.indexOf(fitnessIcon) === -1 && classes.indexOf('Fitness') > -1){\n          classes.push(fitnessIcon);\n        }\n        if(classes.indexOf(poolIcon) === -1 && classes.indexOf('Pool') > -1){\n          classes.push(poolIcon);\n        }\n        if(classes.indexOf(rockWallIcon) === -1 && classes.indexOf('Rock Wall') > -1){\n          classes.push(rockWallIcon);\n        }\n\n        return classes.join(' ');\n      };\n    })\n    .filter('minutesToTimeString', function(){\n      return function(input){\n        if(!input) return;\n        var time = '';\n        var hours = Math.floor(input / 60);\n        if(hours > 0){\n          time += hours;\n          time += hours > 1 ? ' hours' : ' hour';\n        }\n        var minutes = input % 60;\n        if(hours > 0 && minutes > 0){\n          time += ' & ';\n        }\n        if(minutes > 0){\n          time += minutes + ' minutes';\n        }\n        return time;\n      };\n    })\n    .filter('preventDuplicateDeadlines', function(){\n      return function(input){\n        if(!input) return;\n        var events = [];\n        angular.forEach(input, function(event){\n          var add = true;\n          angular.forEach(events, function(deadline){\n            if(add && deadline.title == event.title && deadline.start == event.start){\n              add = false;\n            }\n          });\n          if(add){\n            events.push(event);\n          }\n        });\n        return events;\n      };\n    })\n    .filter('trusted', ['$sce', function($sce){\n      return function(input){\n        if(!input) return;\n        return $sce.trustAsHtml(input);\n      };\n    }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .controller('EventsCtrl', ['$scope', 'appService', 'calendarService',\n      function ($scope, appService, calendarService) {\n        var lastRequestTime = moment();\n        var shouldLoadEvents = true;\n        $scope.events = {\n          list: []\n        };\n\n        appService.runOnLoad()\n          .then(function(data){\n            calendarService.init(data);\n            if(shouldLoadEvents){\n              loadEvents();\n            }\n          });\n\n        function loadEvents() {\n          calendarService.getEvents()\n            .then(function(data){\n              // Make sure our data is the newest requested\n              if(lastRequestTime.isAfter(data.requestTime)) return;\n              var eventsList = [];\n              // Prevent duplicates then sort by date\n              $scope.events.list = data.events.filter(function(event){\n                if(eventsList.indexOf(event.id) > -1){\n                  return false;\n                }\n                eventsList.push(event.id);\n                return true;\n              }).sort(function(a, b){\n                if(a.startMoment.isSame(b.startMoment)) return 0;\n                return a.startMoment.isAfter(b.startMoment) ? 1 : -1;\n              });\n              $scope.eventTitles = calendarService.getEventTitles(data.events);\n            });\n        }\n\n        $scope.$on('overrideEventLoading', function(){\n          shouldLoadEvents = false;\n        });\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('bothView', ['$rootScope', 'PLUGIN_ROOT', function($rootScope, PLUGIN_ROOT){\n      return {\n        templateUrl: PLUGIN_ROOT + '/templates/display/both.html',\n        link: function(scope){\n          scope.selectedView = 'calendar';\n          scope.changeView = function(type){\n            scope.selectedView = type;\n          };\n        }\n      };\n    }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('calendarView', ['PLUGIN_ROOT', 'appService', 'calendarService',\n      function(PLUGIN_ROOT, appService, calendarService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/calendarView.html',\n          link: function(scope){\n            var start, eventTypes, weekNum = 0,\n              eventCal = angular.element('#eventCal'),\n              defaultEventTitle = calendarService.getDefaultEventTitle();\n\n            scope.loading = true;\n            scope.currentEventTypes = [];\n            scope.eventTypes = [];\n            scope.eventTitles = [defaultEventTitle];\n            scope.eventTitle = defaultEventTitle;\n            scope.$emit('overrideEventLoading');\n\n            // Set up calendar\n            eventCal.fullCalendar({\n              handleWindowResize: true,\n              defaultView: 'agendaWeek',\n              allDaySlot: false,\n              minTime: '06:00:00',\n              scrollTime: '07:00:00',\n              aspectRatio: 0.9,\n              eventAfterAllRender: function(isLoading){\n                scope.loading = !isLoading;\n              }\n            });\n\n            appService.runOnLoad()\n              .then(function(data){\n                eventTypes = data.eventTypes;\n                getEvents();\n              });\n\n            // Filter events by title\n            scope.$watch('eventTitle', function(){\n              if(!scope.eventTitle) return;\n              addEvents(scope.allEvents);\n            });\n\n            // Replace event title with 'All' if no events with that title exist (for next/prev function)\n            scope.$watch('eventTitles', function(){\n              if(scope.eventTitles.indexOf(scope.eventTitle) == -1){\n                scope.eventTitle = defaultEventTitle;\n              }\n            });\n\n            // Full calendar buttons\n            angular.element('.fc-next-button').click(function(){\n              start = moment().startOf('week').add(++weekNum, 'weeks');\n              getEvents(start);\n            });\n            angular.element('.fc-prev-button').click(function(){\n              start = moment().startOf('week').add(--weekNum, 'weeks');\n              getEvents(start);\n            });\n            angular.element('.fc-today-button').click(function(){\n              weekNum = 0;\n              getEvents();\n            });\n\n            function getEvents(start) {\n              if(start === undefined){\n                start = moment().startOf('day').startOf('week');\n              }\n              calendarService.getEvents(start)\n                .then(function(data){\n                  // Save all events for filtering\n                  setEventData(data.events);\n                  addEvents(data.events);\n                });\n            }\n\n            function addEvents(events){\n              if(events === undefined) return;\n              scope.allEvents = events;\n              eventCal.fullCalendar('removeEvents');\n              // Add events, filtered by event title if selected\n              eventCal.fullCalendar('addEventSource', function(){\n                var className = scope.eventTitle;\n                if(!className || className == defaultEventTitle) return events;\n                if(scope.eventTitle !== defaultEventTitle){\n                  events = events.filter(function(event){\n                    return event.title === scope.eventTitle;\n                  });\n                }\n                return events;\n              }());\n            }\n\n            function setEventData(events){\n              // Get titles\n              var eventTitles = [];\n              angular.forEach(events, function(event){\n                if(eventTitles.indexOf(event.title) === -1){\n                  eventTitles.push(event.title);\n                }\n              });\n              scope.eventTitles = [defaultEventTitle].concat(eventTitles.sort());\n              // Get current event types\n              scope.eventTypes = [];\n              var types = events.map(function(event){\n                return event.type;\n              });\n              scope.eventTypes = eventTypes.filter(function(eventType){\n                return types.indexOf(eventType.name) > -1;\n              });\n              scope.$apply();\n            }\n\n          }\n        };\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('clinicsView', ['PLUGIN_ROOT', 'appService', 'calendarService',\n      function(PLUGIN_ROOT, appService, calendarService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/clinics.html',\n          link: function(scope){\n            scope.$emit('overrideEventLoading');\n            appService.runOnLoad()\n              .then(function(data){\n                var start = moment().startOf('day');\n                var end = start.clone().add(3, 'months');\n                calendarService.init(data);\n                return calendarService.getEvents(start, end);\n              })\n              .then(function(results){\n                scope.events.list = results.events.sort(function(a, b){\n                  if(a.startMoment.isSame(b.startMoment)){\n                    return 0;\n                  } else if(a.startMoment.isAfter(b.startMoment)){\n                    return 1;\n                  } else {\n                    return -1;\n                  }\n                });\n              });\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('deadlinesView', ['PLUGIN_ROOT', 'appService', 'calendarService',\n      function(PLUGIN_ROOT, appService, calendarService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/deadlines.html',\n          link: function(scope){\n            scope.$emit('overrideEventLoading');\n\n            appService.runOnLoad()\n              .then(function(data){\n                calendarService.init(data);\n                calendarService.getRegistrationDeadlines()\n                  .then(function(a){\n                    scope.events.list = a.events;\n                    if(a.events.length === 0){\n                      scope.noEventsToday = true;\n                    }\n                    scope.$apply();\n                  });\n            });\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('detailsView', ['PLUGIN_ROOT', 'appService', 'calendarService', 'dateService',\n      function(PLUGIN_ROOT, appService, calendarService, dateService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/details.html',\n          link: function(scope){\n            scope.noEventFound = false;\n\n            appService.runOnLoad()\n              .then(function(){\n                calendarService.getEvent()\n                  .then(function(event){\n                    scope.event = event;\n                    if(event.recurrence){\n                      scope.recurrence = event.recurrence;\n                    } else if(event.recurringEventId){\n                      getRecurrence(event);\n                    } else if(event !== undefined) {\n                      var day = [event.startMoment.format('dd').toUpperCase()];\n                      scope.recurrence = dateService.getDaysString(day);\n                    } else {\n                      scope.noEventFound = true;\n                    }\n                  }, function(){\n                    scope.noEventFound = true;\n                  });\n              });\n\n            function getRecurrence(event){\n              calendarService.getRecurrence(event)\n                .then(function(recurrence){\n                  if(recurrence){\n                    // Set recurrence\n                    var days = recurrence.split('BYDAY=').pop().split(',');\n                    scope.recurrence = dateService.getDaysString(days);\n                    // Set end of session if exists\n                    if(recurrence.indexOf('UNTIL') > -1){\n                      var until = '';\n                      angular.forEach(recurrence.split(';'), function(piece){\n                        if(piece.indexOf('UNTIL') > -1){\n                          until = piece;\n                        }\n                      });\n                      scope.sessionEndsOn = moment(until, 'YYYYMMDDTHHmmSSZ').format('MMMM D, YYYY');\n                    }\n                  }\n                });\n            }\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('dropinsView', ['PLUGIN_ROOT', 'appService', 'calendarService',\n      function(PLUGIN_ROOT, appService, calendarService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/dropins.html',\n          link: function(scope){\n            scope.$emit('overrideEventLoading');\n            scope.noEventsToday = false;\n\n            appService.runOnLoad()\n              .then(function(){\n                calendarService.getDropins()\n                  .then(function(data){\n                    if(data.events.length === 0){\n                      scope.noEventsToday = true;\n                    } else {\n                      scope.events.list = data.events;\n                      scope.$apply();\n                    }\n                  });\n              });\n\n            scope.filterDropins = function (event) {\n              if(event.categories.indexOf('Drop Ins') > -1){\n                return event;\n              }\n            };\n          }\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('fieldsView', ['PLUGIN_ROOT', 'appService',\n      function(PLUGIN_ROOT, appService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/fields.html',\n          link: function(scope){\n            appService.runOnLoad()\n              .then(function(data){\n                angular.forEach(data.eventTypes, function(type){\n                  if(type.name == 'turfField'){\n                    scope.turfFieldColor = type.color;\n                  } else if(type.name == 'grassField'){\n                    scope.grassFieldColor = type.color;\n                  }\n                });\n              });\n          }\n        };\n      }\n    ]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('listView', ['PLUGIN_ROOT', function(PLUGIN_ROOT){\n      return {\n        templateUrl: PLUGIN_ROOT + '/templates/display/list.html'\n      };\n    }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('tripNotes', ['PLUGIN_ROOT',\n      function(PLUGIN_ROOT){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/tripNotes.html'\n        };\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .directive('tripsView', ['PLUGIN_ROOT', 'appService', 'calendarService',\n      function(PLUGIN_ROOT, appService, calendarService){\n        return {\n          templateUrl: PLUGIN_ROOT + '/templates/display/trips.html',\n          link: function(scope){\n            scope.$emit('overrideEventLoading');\n            appService.runOnLoad()\n              .then(function(data){\n                var start = moment().startOf('day');\n                var end = moment().startOf('day').add(6, 'months');\n                calendarService.init(data);\n                return calendarService.getEvents(start, end);\n              })\n              .then(function(results){\n                scope.events.list = results.events;\n              });\n          }\n        };\n      }]);\n  }());","(function(){\n  'use strict';\n\n  angular.module('eventsApp')\n    .service('calendarService', [ '$rootScope', '$filter', 'googleApiService', 'dateService',\n      function ($rootScope, $filter, googleApiService, dateService) {\n        var data, categories, calendarIds,\n          views = [],\n          defaultEventTitle = \"Filter By Class...\";\n\n        this.init = function(d){\n          data = d;\n          views = [];\n          angular.forEach(data.view, function(view){\n            views.push(view.trim());\n          });\n          categories = data.categories;\n          calendarIds = getCalendarIds();\n        };\n\n        this.getDefaultEventTitle = function(){\n          return defaultEventTitle;\n        };\n\n        this.getEvents = function(start, end){\n          return getEventsForCalendars(categories, start, end);\n        };\n\n        this.getEvent = function(){\n          return googleApiService.getEvent(data.calendarId, data.eventId);\n        };\n\n        this.getRegistrationDeadlines = function(){\n          var categories = [\"Registration\"];\n          var start = moment().subtract(1, 'day').endOf('day');\n          var end = moment().add(1, 'months');\n          return getEventsForCalendars(categories, start, end);\n        };\n\n        this.getRecurrence = function(event){\n          return googleApiService.getRecurrenceForEvent(event);\n        };\n\n        this.getDropins = function(){\n          var cats = [];\n          angular.forEach(data.view, function(category){\n            cats.push({\n              name: category,\n              parent: ''\n            });\n          });\n          var start = moment().startOf('day');\n          var end = moment().endOf('day');\n          return getEventsForCalendars(cats, start, end);\n        };\n\n        this.getEventTitles = function(events){\n          // Must also change in calendarDirective\n          var titles = [defaultEventTitle];\n          // Order here so we can keep \"All\" at top of list\n          events = $filter('orderBy')(events, 'title');\n          angular.forEach(events, function(event){\n            if(!event.allDay && titles.indexOf(event.title) == -1) {\n              titles.push(event.title);\n            }\n          });\n          return titles;\n        };\n\n        function getCalendarIds(){\n          var calendarIds = [];\n          angular.forEach(data.calendars, function(calendar){\n            if(views.indexOf(calendar.name) > -1) {\n              calendarIds.push(calendar.id);\n            }\n          });\n          return calendarIds;\n        }\n\n        function getEventsForCalendars(c, start, end){\n          // Get categories\n          var eventCats = c ? c : categories;\n          // Get start and end dates, default start and end of this week\n          if(!start){\n            start = moment().startOf('week').startOf('day');\n          }\n          if(!end){\n            end = start.clone().add(7, 'days');\n          }\n          start = dateService.getDateTimeString(start.format('MM/DD/YYYY h:mma'));\n          end = dateService.getDateTimeString(end.format('MM/DD/YYYY h:mma'));\n          return googleApiService.getEvents(calendarIds, eventCats, start, end);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .controller('MainCtrl', ['$scope', '$timeout', 'appService',\n      function ($scope, $timeout, appService) {\n        var data;\n        $scope.categories = [];\n\n        $scope.init = function(d){\n          data = angular.fromJson(d);\n          $scope.loading = false;\n          $scope.categories = data.categories.all;\n          $scope.view = data.view;\n          $scope.detailsPage = data.detailsPage;\n          $scope.calendarId = data.calendarId;\n          $scope.eventId = data.eventId;\n          $scope.settings = data; // TODO: delete\n          appService.init(data);\n          loadApp();\n        };\n\n        // Wait for gapi to load\n        function loadApp(){\n          $timeout(function(){\n            if(gapi === undefined || gapi.client === undefined || gapi.client.setApiKey === undefined){\n              loadApp();\n            } else {\n              appService.appIsLoaded();\n            }\n          }, 5);\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .directive('loading', function () {\n      return {\n        template: '<div class=\"bsuEventSpinner\"></loading>'\n      };\n    });\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .directive('selectOnClick', function () {\n      return {\n        restrict: 'A',\n        link: function (scope, elem) {\n          elem.on('click', function () {\n            this.select();\n          });\n        }\n      };\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('anchorSmoothScroll', ['$document', '$window',\n      function ($document, $window) {\n        var document = $document[0],\n          window = $window,\n          self = this;\n\n        this.scrollToTop = function(){\n          self.scrollTo(document.getElementsByTagName('head')[0]);\n        };\n\n        this.scrollTo = function (element) {\n          if (element) {\n            var startY = getCurrentPagePosition(window, document);\n            var stopY = getElementY(document, element);\n            var distance = stopY > startY ? stopY - startY : startY - stopY;\n\n            if (distance < 100) {\n              this.scrollToTop(stopY);\n            } else {\n              var defaultSpeed = Math.round(distance / 80);\n              var speed = defaultSpeed > 20 ? 20 : defaultSpeed;\n              if (stopY > startY) {\n                scrollDown(startY, stopY, speed, distance);\n              } else {\n                scrollUp(startY, stopY, speed, distance);\n              }\n            }\n          }\n        };\n\n        function getCurrentPagePosition(window, document) {\n          // Firefox, Chrome, Opera, Safari\n          if (window.pageYOffset) return window.pageYOffset;\n          // Internet Explorer 6 - standards mode\n          if (document.documentElement && document.documentElement.scrollTop)\n            return document.documentElement.scrollTop;\n          // Internet Explorer 6, 7 and 8\n          if (document.body.scrollTop) return document.body.scrollTop;\n          return 0;\n        }\n\n        function getElementY(document, element) {\n          var y = element.offsetTop;\n          var node = element;\n          while (node.offsetParent && node.offsetParent != document.body) {\n            node = node.offsetParent;\n            y += node.offsetTop;\n          }\n          return y;\n        }\n\n        function scrollDown(startY, stopY, speed, distance) {\n          var timer = 0;\n          var step = Math.round(distance / 25);\n          var leapY = startY + step;\n\n          for (var i = startY; i < stopY; i += step) {\n            setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n            leapY += step;\n            if (leapY > stopY) leapY = stopY;\n            timer++;\n          }\n        }\n\n        function scrollUp(startY, stopY, speed, distance) {\n          var timer = 0;\n          var step = Math.round(distance / 25);\n          var leapY = startY - step;\n\n          for (var i = startY; i > stopY; i -= step) {\n            setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n            leapY -= step;\n            if (leapY < stopY) leapY = stopY;\n            timer++;\n          }\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('appService', ['$http', '$q', 'googleApiService', 'PLUGIN_ROOT', 'AT_SIGN_REPLACEMENT',\n      function ($http, $q, googleApiService, PLUGIN_ROOT, AT_SIGN_REPLACEMENT) {\n        var data;\n        var loadPromise = $q.defer();\n\n        this.init = function(d){\n          data = d;\n        };\n\n        this.runOnLoad = function(){\n          return loadPromise.promise;\n        };\n\n        this.appIsLoaded = function(){\n          loadPromise.resolve(loadApp());\n        };\n\n        function loadApp() {\n          // Get categories\n          var categories = [];\n          angular.forEach(data.categories.all, function (category) {\n            categories.push({\n              name: category.name,\n              parent: category.name\n            });\n\n            angular.forEach(category.children, function (childCategory) {\n              categories.push({\n                name: childCategory,\n                parent: category.name\n              });\n            });\n          });\n\n          // Replace @ sign (WP theme tries removing this from url)\n          if(data.calendarId){\n            data.calendarId = data.calendarId.replace(AT_SIGN_REPLACEMENT, '@');\n          }\n\n          // Get categories to display\n          var view = data.categories.view;\n          var categoriesToDisplay = [];\n          if (view !== undefined && view.length > 0) {\n            categoriesToDisplay = view === 'all' ? categories : view.split(',');\n          }\n          var settings = {\n            categories: categories,\n            view: categoriesToDisplay,\n            calendarId: data.calendarId,\n            eventId: data.eventId,\n            clientId: data.clientId,\n            detailsPage: data.detailsPage,\n            calendars: data.calendars,\n            eventTypes: data.eventTypes,\n            locations: data.locations,\n            staticCategories: data.staticCategories\n          };\n          if(data.icons !== undefined){\n            settings.icons = data.icons;\n          }\n\n          googleApiService.init(data);\n\n          var defer = $q.defer();\n          defer.resolve(settings);\n\n          return defer.promise;\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('dateService', function () {\n\n      function pad(n) {\n        return n < 10 ? '0' + n : n;\n      }\n\n      this.getDateString = function (date, format, timezone) {\n        if (format === undefined) {\n          format = 'YYYY-MM-DD';\n        }\n        var dateString = moment(date, ['MM/DD/YYYY']).format(format);\n        if (timezone !== undefined) {\n          dateString += 'Z';// + (moment().isDST() ? '-06:00' : '-07:00');\n        }\n\n        return dateString;\n      };\n\n      this.getDateTimeString = function (date, time) {\n        var timezone = moment().isDST() ? '-06:00' : '-07:00';\n        return moment(pad(date) + pad(time), ['MM/DD/YYYY h:mma'])\n          .format('YYYY-MM-DDTHH:mm:ss' + timezone);\n      };\n\n      this.getDaysString = function(days) {\n        var recurrenceDays = [];\n        angular.forEach(days, function(day) {\n          switch (day) {\n            case 'MO':\n              recurrenceDays.push('M');\n              break;\n            case 'TU':\n              recurrenceDays.push('Tu');\n              break;\n            case 'WE':\n              recurrenceDays.push('W');\n              break;\n            case 'TH':\n              recurrenceDays.push('Th');\n              break;\n            case 'FR':\n              recurrenceDays.push('F');\n              break;\n            case 'SA':\n              recurrenceDays.push('Sa');\n              break;\n            case 'SU':\n              recurrenceDays.push('Su');\n              break;\n          }\n        });\n\n        return recurrenceDays.join('/');\n      };\n\n    });\n}());","(function(){\n  'use strict';\n  angular.module('sharedResources')\n    .service('eventService', ['dateService', 'FIELDS', 'SEPARATOR', 'AT_SIGN_REPLACEMENT',\n      function (dateService, FIELDS, SEPARATOR, AT_SIGN_REPLACEMENT) {\n        var settings;\n        var dateDescriptionNewLineSeparator = '|---|';\n\n        this.init = function(s){\n          settings = s;\n        };\n\n        this.getEmptyEvent = function () {\n          return {\n            type: null,\n            name: null,\n            startDate: null,\n            startTime: '8:00am',\n            endDate: null,\n            endTime: '8:00am',\n            allDay: false,\n            repeat: {\n              repeating: false,\n              repeats: 'WEEKLY',\n              repeatEvery: 1,\n              repeatOn: [],\n              repeatBy: 'dayOfWeek',\n              ends: {\n                type: 'never',\n                after: null,\n                on: null\n              }\n            },\n            categories: [],\n            location: null,\n            description: null,\n            detailsUrl: null,\n            fee: null,\n            registration: {\n              required: false,\n              deadline: null\n            },\n            recTracId: null\n          };\n        };\n\n        this.formatRegistration = function (event) {\n          event.startDate = event.registration.deadline;\n          event.endDate = event.registration.deadline;\n          event.allDay = true;\n          var description = getDescriptionWithMetaData(event);\n          var start = getStartTimeForDashboard(event);\n          var end = getEndTimeForDashboard(event);\n\n          return {\n            summary: event.name,\n            name: event.name,\n            description: description,\n            start: start,\n            end: end\n          };\n        };\n\n        this.formatForDashboard = function (event) {\n\n          var description = getDescriptionWithMetaData(event);\n          var start = getStartTimeForDashboard(event);\n          var end = getEndTimeForDashboard(event);\n          var recurrence = getRecurrenceForDashboard(event);\n          return {\n            summary: event.name,\n            name: event.name,\n            description: description,\n            location: event.location,\n            start: start,\n            end: end,\n            recurrence: recurrence\n          };\n        };\n\n        this.formatForDisplay = function(event, calendarId){\n          var description,\n            metadata,\n            descriptionArray = [];\n          if(event.description !== undefined){\n            descriptionArray = event.description.split(SEPARATOR);\n            if(isArray(descriptionArray)){\n              description = descriptionArray.shift();\n              metadata = descriptionArray.shift();\n            } else {\n              description = descriptionArray;\n            }\n          }\n\n          metadata = getMetaData(metadata);\n\n          // Get start and end\n          var start = getEventStartForDisplay(event);\n          var end = getEventEndForDisplay(event);\n          var startMoment = moment(start, ['YYYY-MM-DDTHH:mm:ssZ']);\n          var endMoment = moment(end, ['YYYY-MM-DDTHH:mm:ssZ']);\n\n          var eventType = getEventType(metadata);\n          var color = getColor(eventType);\n          var title = event.summary;\n          var fieldType = metadata.fieldType;\n\n          var registrationStartMoment, registrationStart, registrationEndMoment, registrationEnd;\n\n          if(metadata.registration && metadata.registration.startDateTime){\n            registrationStartMoment = moment(metadata.registration.startDateTime, 'MM/DD/YYYY h:mma');\n            registrationStart = registrationStartMoment.format('YYYY-MM-DD');\n          }\n          if(metadata.registration && metadata.registration.endDateTime){\n            registrationEndMoment = moment(metadata.registration.endDateTime, 'MM/DD/YYY h:mma');\n            registrationEnd = registrationEndMoment.format('YYYY-MM-DD');\n          }\n\n          return {\n            id: event.id,\n            calendarId: calendarId,\n            description: description,\n            location: event.location,\n            dateDescription: metadata.dateDescription,\n            start: start,\n            startMoment: startMoment,\n            end: end,\n            endMoment: endMoment,\n            duration: endMoment.diff(startMoment, 'minutes'),\n            registrationStartMoment: registrationStartMoment,\n            registrationStart: registrationStart,\n            registrationEndMoment: registrationEndMoment,\n            registrationEnd: registrationEnd,\n            allDay: startMoment.isSame(endMoment),\n            summary: event.summary,\n            title: title,\n            categories: metadata.categories,\n            fee: metadata.fee,\n            url: getUrl(event, calendarId, metadata),\n            googleCalUrl: getGoogleCalUrl(event, calendarId, startMoment, endMoment, description),\n            recTracUrl: metadata.recTracUrl,\n            iconUrl: metadata.iconUrl,\n            recurrence: event.recurrence,\n            recurringEventId: event.recurringEventId,\n            registration: {\n              url: metadata.registration.url,\n              deadline: metadata.registration.deadline\n            },\n            fieldType: fieldType,\n            editable: false,\n            className: getClasses(metadata),\n            color: color,\n            type: eventType,\n            backgroundcolor: color,\n            borderColor: '',\n            textColor: '#F6F6F5',\n            otherLocationDescription: metadata.otherLocationDescription,\n            tripIncludes: metadata.tripIncludes,\n            packingList: metadata.packingList\n          };\n        };\n\n        function getStartTimeForDashboard(event) {\n          var start = {\n            timeZone: \"America/Boise\"\n          };\n          if (event.allDay === true) {\n            start.date = dateService.getDateString(event.startDate);\n          } else {\n            start.dateTime = dateService.getDateTimeString(event.startDate, event.startTime);\n          }\n\n          return start;\n        }\n\n        function getEndTimeForDashboard(event) {\n          var end = {\n            timeZone: \"America/Boise\"\n          };\n          if (event.allDay === true) {\n            end.date = dateService.getDateString(event.endDate);\n          } else {\n            end.dateTime = dateService.getDateTimeString(event.endDate, event.endTime);\n          }\n\n          return end;\n        }\n\n        function getDescriptionWithMetaData(event) {\n          // Create metadata array\n          var metadata = [];\n          if (event.categories.length > 0) {\n            metadata.push(FIELDS.CATEGORIES + event.categories.toString().replace(/- /g, ''));\n          }\n          if (event.detailsUrl !== null) {\n            metadata.push(FIELDS.DETAILS_URL + event.detailsUrl);\n          }\n          if (event.fee !== null) {\n            if([undefined, 0, '$0', 'free', 'Free'].indexOf(event.fee) > -1){\n              metadata.push(FIELDS.FEE + 'Free');\n            } else {\n              metadata.push(FIELDS.FEE + '$' + event.fee.replace('$', ''));\n            }\n          } else {\n            metadata.push(FIELDS.FEE + 'free');\n          }\n          if (event.recTracId !== null) {\n            var url = 'https://reconline.boisestate.edu/wbwsc/webtrac.wsc/wbsearch.html?xxsearch=yes&xxactivitynumber=' + event.recTracId;\n            metadata.push(FIELDS.RECTRAC_URL + url);\n          }\n          if (event.registration.required === true) {\n            metadata.push(FIELDS.REGISTRATION_DEADLINE + event.registration.deadline);\n          }\n          if(event.dateDescription){\n            var dateDescription = event.dateDescription.replace(/\\n/g, dateDescriptionNewLineSeparator);\n            metadata.push(FIELDS.DATE_DESCRIPTION + dateDescription);\n          }\n          if(event.fieldType){\n            metadata.push(FIELDS.FIELD_TYPE + event.fieldType);\n          }\n          if(event.iconUrl){\n            metadata.push(FIELDS.UNIQUE_ICON_URL + event.iconUrl);\n          }\n          if(event.registration.required){\n            metadata.push(FIELDS.START_DATE_TIME + event.startDate + ' ' + event.startTime);\n            metadata.push(FIELDS.END_DATE_TIME + event.endDate + ' ' + event.endTime);\n          }\n          if(event.otherLocationDescription){\n            metadata.push(FIELDS.OTHER_LOCATION + event.otherLocationDescription);\n          }\n          if(event.tripIncludes){\n            metadata.push(FIELDS.TRIP_INCLUDES + event.tripIncludes);\n          }\n          if(event.packingList){\n            metadata.push(FIELDS.PACKING_LIST + event.packingList);\n          }\n\n          if (metadata.length > 0) {\n            metadata = SEPARATOR + metadata.join('\\n');\n          }\n\n          return event.description + metadata;\n        }\n\n        function getRecurrenceForDashboard(event) {\n          // Get recurrence\n          var today = moment(), rrule;\n\n          if (event.repeat.repeating === true) {\n            rrule = 'RRULE:FREQ=' + event.repeat.repeats + ';INTERVAL=' + event.repeat.repeatEvery + ';';\n            var days = event.repeat.repeatOn.join(',');\n\n            if(event.repeat.repeatBy == 'dayOfMonth'){\n              rrule += 'BYMONTHDAY=' + today.format('D') + ';';\n            } else if(event.repeat.repeatOn.length > 0){\n              rrule += 'BYDAY=' + days + ';';\n            }\n          }\n\n          if (event.repeat.ends.type == 'on') {\n            rrule += 'UNTIL=' + dateService.getDateString(event.repeat.ends.on, 'YYYYMMDDTHHmmss', true) + ';';\n          } else if (event.repeat.ends.type == 'after') {\n            rrule += 'COUNT=' + event.repeat.ends.after + ';';\n          }\n\n          if(rrule === undefined){\n            return [];\n          } else {\n            return [rrule];\n          }\n        }\n\n        function getUrl(event, calendarId, metadata){\n          if(metadata.detailsUrl !== undefined){\n            return metadata.detailsUrl;\n          }\n          var url = settings.detailsPage;\n          url += url.indexOf('?') > -1 ? '&' : '?';\n          url += 'id=' + event.id + '&cal=' + calendarId;\n          return url.replace('@', AT_SIGN_REPLACEMENT);\n        }\n\n        function getEventStartForDisplay(event){\n          if(event.start.date !== undefined){\n            return event.start.date;\n          }\n          return event.start.dateTime;\n        }\n\n        function getEventEndForDisplay(event){\n          if(event.end.date !== undefined){\n            return event.end.date;\n          }\n          return event.end.dateTime;\n        }\n\n        function getGoogleCalUrl(event, calendarId, start, end, description){\n          var googleCalUrl;\n          if(calendarId && event.id){\n            var googleStart = start.format('YYYYMMDDTHHmmss');\n            var googleEnd = end.format('YYYYMMDDTHHmmss');\n            googleCalUrl = \"http://www.google.com/calendar/event?action=TEMPLATE\" +\n            \"&text=\" + event.summary +\n            \"&dates=\" + googleStart + \"/\" + googleEnd +\n            \"&details=\" + description +\n            \"&location=\" + event.location +\n            \"&trp=false\";\n          }\n          return googleCalUrl;\n        }\n\n        function getColor(eventType){\n          var color = '#000';\n          angular.forEach(settings.eventTypes, function(type){\n            if(type.name == eventType){\n              color = type.color;\n            }\n          });\n          return color;\n        }\n\n        function getEventType(metadata){\n          var eventType = 'default';\n          if(!metadata || !metadata.categories) {\n            return eventType;\n          }\n          if(metadata.categories.indexOf('Drop Ins') > -1) {\n            eventType = 'dropin';\n          }\n          if(metadata.categories.indexOf('Reserved') > -1){\n            eventType = 'reserved';\n          }\n          if(metadata.registration.deadline && metadata.fee != 'free'){\n            eventType = 'premium';\n          }\n          if(metadata.categories.indexOf('Special Event') > -1){\n            eventType = 'other';\n          }\n          if(metadata.categories.indexOf('Fields') > -1){\n            if(metadata.fieldType == 'Turf Field'){\n              eventType = 'turfField';\n            } else if(metadata.fieldType == 'Grass Field'){\n              eventType = 'grassField';\n            }\n          }\n\n          return eventType;\n        }\n\n        function getClasses(metadata){\n          return metadata.categories;\n        }\n\n        function isArray(value){\n          return value instanceof Array;\n        }\n\n        function getMetaData(meta){\n          var metadata = {\n            registration: {}\n          };\n          if(meta !== undefined){\n            meta = meta.split('\\n');\n          }\n          if(!isArray(meta)){\n            return {\n              categories: null,\n              detailsUrl: null,\n              fee: null,\n              registration: {\n                url: null,\n                deadline: null\n              }\n            };\n          }\n          // Check for categories\n          var categories = getMetaDataValue(meta, FIELDS.CATEGORIES);\n          if(categories !== undefined){\n            metadata.categories = categories.split(',');\n            if(!isArray(metadata.categories)){\n              metadata.categories = [metadata.categories];\n            }\n          } else {\n            metadata.categories = [];\n          }\n          // Check for details url\n          metadata.detailsUrl = getMetaDataValue(meta, FIELDS.DETAILS_URL);\n          // Check for fee\n          metadata.fee = getMetaDataValue(meta, FIELDS.FEE);\n          // Check for registration url\n          metadata.registration.url = getMetaDataValue(meta, FIELDS.REGISTRATION_URL);\n          // Check for registration deadline\n          metadata.registration.deadline = getMetaDataValue(meta, FIELDS.REGISTRATION_DEADLINE);\n          // Check for RecTrac URL\n          metadata.recTracUrl = getMetaDataValue(meta, FIELDS.RECTRAC_URL);\n          // Check for date description (used in trips and outdoors)\n          metadata.dateDescription = getMetaDataValue(meta, FIELDS.DATE_DESCRIPTION);\n          // Check for unique icon url\n          metadata.iconUrl = getMetaDataValue(meta, FIELDS.UNIQUE_ICON_URL);\n          if(metadata.dateDescription){\n            // Relace new line separator with line break\n            var newLineSeparator = dateDescriptionNewLineSeparator.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n            metadata.dateDescription = metadata.dateDescription.replace(new RegExp(newLineSeparator, 'g'), \"<br />\");\n          }\n          metadata.fieldType = getMetaDataValue(meta, FIELDS.FIELD_TYPE);\n          metadata.registration.startDateTime = getMetaDataValue(meta, FIELDS.START_DATE_TIME);\n          metadata.registration.endDateTime = getMetaDataValue(meta, FIELDS.END_DATE_TIME);\n\n          metadata.otherLocationDescription = getMetaDataValue(meta, FIELDS.OTHER_LOCATION);\n          metadata.tripIncludes = getMetaDataValue(meta, FIELDS.TRIP_INCLUDES);\n          metadata.packingList = getMetaDataValue(meta, FIELDS.PACKING_LIST);\n\n          return metadata;\n        }\n\n        function getMetaDataValue(metaArray, field){\n          var metaValue;\n          angular.forEach(metaArray, function(value){\n            if(value.indexOf(field) > -1){\n              metaValue = value.replace(field, '');\n            }\n          });\n          return metaValue;\n        }\n\n      }]);\n}());","(function(){\n  'use strict';\n\n  angular.module('sharedResources')\n    .service('googleApiService', ['$q', 'eventService',\n      function ($q, eventService) {\n        var version = 'v3';\n\n        this.init = function(settings){\n          gapi.client.setApiKey(settings.apiKey);\n          eventService.init(settings);\n        };\n\n        this.getEvent = function(calendarId, eventId) {\n          var defer = $q.defer();\n          if(!calendarId || !eventId){\n            defer.reject('Calendar not found.');\n            return defer.promise;\n          }\n          gapi.client.load('calendar', version).then(function(){\n            gapi.client.calendar.events.get({\n                'calendarId': calendarId,\n                'eventId': eventId\n              }).then(function(response){\n                var event = eventService.formatForDisplay(response.result, calendarId);\n                defer.resolve(event);\n              }, function(){\n                defer.reject('Error loading calendar event.');\n              });\n          });\n\n          return defer.promise;\n        };\n\n        this.getEvents = function(calendarIds, categories, start, end){\n          var requestTime = moment();\n          var promises = [];\n          var calendarEvents = [];\n          return gapi.client.load('calendar', version)\n            .then(function(){\n              angular.forEach(calendarIds, function(calendarId){\n                if(calendarId !== null){\n                  var promise = gapi.client.calendar.events.list({\n                    'calendarId': calendarId,\n                    'singleEvents': true,\n                    'timeMin': start,\n                    'timeMax': end\n                  })\n                  .then(function(response){\n                    angular.forEach(response.result.items, function(event){\n                      var thisEvent = eventService.formatForDisplay(event, calendarId);\n                      if(shouldAdd(thisEvent, categories)){\n                        calendarEvents.push(thisEvent);\n                      }\n                    });\n                  });\n                  promises.push(promise);\n                }\n              });\n              return $q.all(promises)\n                .then(function(){\n                  calendarEvents = calendarEvents.sort(function(a, b){\n                    if(a.startMoment.isSame(b.startMoment)){\n                      return 0;\n                    } else if(a.startMoment.isAfter(b.startMoment)){\n                      return 1;\n                    } else {\n                      return -1;\n                    }\n                  });\n                  return {\n                    events: calendarEvents,\n                    requestTime: requestTime\n                  };\n                });\n          });\n        };\n\n        this.getRecurrenceForEvent = function(event, callback){\n          var defer = $q.defer();\n          if(event.recurrence === undefined && event.recurringEventId !== undefined){\n            gapi.client.load('calendar', version).then(function(){\n              gapi.client.calendar.events.get({\n                'calendarId': event.calendarId,\n                'eventId': event.recurringEventId\n              }).then(function(response){\n                defer.resolve(response.result.recurrence.shift());\n              }, function(){\n                defer.reject('Original recurring event not found.');\n              });\n            });\n          } else {\n            callback(event.recurrence);\n          }\n          return defer.promise;\n        };\n\n        this.authorize = function(data, callback){\n          gapi.auth.authorize(data, callback);\n        };\n\n        this.checkAuth = function(data, callback){\n          return gapi.auth.authorize(data, callback);\n        };\n\n        this.createEvent = function(calendarId, event){\n          var defer = $q.defer();\n          gapi.client.load('calendar', version).then(function () {\n            var request = gapi.client.calendar.events.insert({\n              calendarId: calendarId,\n              resource: event\n            });\n            request.execute(function (resp) {\n              if (resp.error) {\n                defer.reject('There was an error adding event.');\n              } else {\n                defer.resolve();\n              }\n            });\n          });\n\n          return defer.promise;\n        };\n\n        function shouldAdd(event, categories){\n          if(categories === undefined || categories.length === 0){\n            return true;\n          }\n          var add = false;\n          angular.forEach(categories, function(category){\n            if(category == 'Registration' ||\n              (event.categories && event.categories.indexOf(category.name) > -1)) {\n              add = true;\n            }\n          });\n          return add;\n        }\n\n      }]);\n}());"],"sourceRoot":"/source/"}